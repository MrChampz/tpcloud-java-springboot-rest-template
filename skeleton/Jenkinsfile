pipeline {
  agent any
  stages {

    stage('Test') {
      when { changeRequest() }
      agent {
        docker {
          image 'maven:3.9.0-eclipse-temurin-17'
          args '-v /root/.m2:/root/.m2'
        }
      }
      steps {
        dir('app') {
          sh "mvn test"
          junit 'target/surefire-reports/*.xml'
        }
      }
    }

    stage('Linter') {
      when { changeRequest() }
      agent {
        docker {
          image 'maven:3.9.0-eclipse-temurin-17'
          args '-v /root/.m2:/root/.m2'
        }
      }
      steps {
        dir('app') {
          sh "mvn checkstyle:check"
        }
        dir('app/target') {
          archiveArtifacts 'checkstyle-result.xml'
        }
      }
    }

    stage('SonarQube analysis') {
      steps {
        script {
          def scannerHome = tool 'SonarScanner 4.8';
          withSonarQubeEnv('Default') {
            sh "${scannerHome}/bin/sonar-scanner"
          }
        }
      }
    }
  }

  post {
    always {
      cleanWs()
    }
  }
}
